<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>signaliduna</groupId>
    <artifactId>parkinglot</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>

        <!-- API -->
        <jakarta-api.version>8.0.0</jakarta-api.version>
        <eclipselink.version>2.7.4</eclipselink.version>

        <maven-dependency-plugin.version>3.0.2</maven-dependency-plugin.version>

        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
        <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>

        <jqassistant-maven-plugin.version>1.3.0</jqassistant-maven-plugin.version>
        <asciidoctor.maven.plugin.version>1.5.5</asciidoctor.maven.plugin.version>
        <asciidoctorj.version>1.5.6</asciidoctorj.version>
        <asciidoctorj.diagram.version>1.5.4.1</asciidoctorj.diagram.version>
        <wiki.user>test</wiki.user>
        <wiki.password>secret</wiki.password>
        <jruby.version>1.7.26</jruby.version>
        <gmavenplus-plugin.version>1.6</gmavenplus-plugin.version>
        <groovy.version>2.4.3</groovy.version>

        <!-- Lombok fÃ¼r getter / setter -->
        <org.projectlombok.version>1.18.0</org.projectlombok.version>

        <failOnMissingWebXml>false</failOnMissingWebXml>

        <hibernate-validator.version>6.0.2.Final</hibernate-validator.version>
        <javax.el.version>3.0.1-b08</javax.el.version>
        <javers-core.version>5.7.7</javers-core.version>

        <log4j2.version>2.9.0</log4j2.version>

        <!-- Test -->
        <junit.version>5.5.2</junit.version>
        <mockito-core.version>3.0.0</mockito-core.version>
        <hamcrest-all.version>1.3</hamcrest-all.version>
        <version.resteasy>4.3.1.Final</version.resteasy>
        <clover-maven-plugin>4.2.0</clover-maven-plugin>
        <pitest-maven.version>1.2.4</pitest-maven.version>

        <spotbugs.version>4.0.0-beta4</spotbugs.version>

        <!-- Reporting -->
        <maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
        <maven-surefire-report-plugin.version>2.20.1</maven-surefire-report-plugin.version>
        <maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>
        <spotbugs-maven-plugin>3.1.12.2</spotbugs-maven-plugin>

        <!-- Runtime -->
        <quarkus.version>0.23.2</quarkus.version>

        <junit-platform-runner.dependency>1.5.2</junit-platform-runner.dependency>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <scope>import</scope>
                <type>pom</type>
                <version>${quarkus.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Quarkus -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy</artifactId>
        </dependency>
        <!-- Hibernate ORM specific dependencies -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-orm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-openapi</artifactId>
        </dependency>
        <!-- Mapping at rest interface -->
        <!-- https://stackoverflow.com/questions/36317022/could-not-find-messagebodywriter-for-response-object-of
        -type-java-util-arraylis -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-jsonb</artifactId>
        </dependency>


        <!-- JDBC driver dependencies -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-test-h2</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Lombok getter / setter -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- JEE API -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakarta-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Domain auditing -->
        <!-- https://javers.org/documentation/ -->
        <dependency>
            <groupId>org.javers</groupId>
            <artifactId>javers-core</artifactId>
            <version>${javers-core.version}</version>
        </dependency>

        <!-- Logging -->
        <!-- http://logging.apache.org/log4j/2.x/maven-artifacts.html -->
        <!-- Logging Apache Log4J2 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <version>${log4j2.version}</version>
        </dependency>

        <!-- JUnit https://junit.org/junit5/ -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Mock Implementierung  https://site.mockito.org/ -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest-all.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- REST-Client -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>${version.resteasy}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <version>${version.resteasy}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>

            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!-- http://maven.apache.org/surefire/maven-failsafe-plugin/index.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- Quarkus compile -->
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test.class</include>
                        <include>**/*Suite.class</include>
                    </includes>
                    <systemProperties>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    </systemProperties>
                </configuration>
            </plugin>


            <!-- http://blog.valiantys.com/en/dev-tools-en/implementing-test-coverage-with-atlassian-tools -->
            <!-- mvn clean clover:setup test clover:aggregate clover:clover -->
            <plugin>
                <groupId>org.openclover</groupId>
                <artifactId>clover-maven-plugin</artifactId>
                <version>${clover-maven-plugin}</version>
                <configuration>
                    <!-- TODO -->
                    <targetPercentage>10%</targetPercentage>
                    <!-- https://confluence.atlassian.com/clover/using-coverage-contexts-72548355.html -->
                    <contextFilters>property</contextFilters>
                </configuration>
                <executions>
                    <execution>
                        <id>clover-check</id>
                        <phase>verify</phase>
                        <goals>
                            <!-- create db for check -->
                            <goal>instrument</goal>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>clover-report</id>
                        <phase>pre-site</phase>
                        <goals>
                            <!-- create db for check -->
                            <goal>instrument</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <!-- Code Coverage -->
            <plugin>
                <groupId>org.openclover</groupId>
                <artifactId>clover-maven-plugin</artifactId>
                <version>${clover-maven-plugin}</version>
            </plugin>

            <!-- Test result -->
            <!-- http://maven.apache.org/surefire/maven-surefire-report-plugin/usage.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <!--suppress MavenModelInspection -->
                <artifactId>maven-surefire-report-plugin</artifactId>
                <!--suppress MavenModelInspection -->
                <version>${maven-surefire-report-plugin.version}</version>
            </plugin>


        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>pit-test</id>
            <activation>
                <property>
                    <name>pit</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Testet die QualitÃ¤t der Tests -->
                    <!-- http://pitest.org -->
                    <!-- mvn org.pitest:pitest-maven:mutationCoverage -->
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <version>${pitest-maven.version}</version>
                        <configuration>
                            <excludedClasses>
                                <param>de.signaliduna.*IT</param>
                            </excludedClasses>
                            <excludedMethods>
                                <param>get*</param>
                                <param>set*</param>
                            </excludedMethods>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <goals>
                                    <goal>mutationCoverage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <!-- see http://pitest.org/quickstart/maven/ -->
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <version>${pitest-maven.version}</version>
                        <configuration>
                            <targetClasses>
                                <param>de.signaliduna*</param>
                            </targetClasses>
                            <targetTests>
                                <param>de.signaliduna*</param>
                            </targetTests>
                            <skip>false</skip>
                            <sourceDataFormats>
                                <sourceDataFormat>HTML</sourceDataFormat>
                            </sourceDataFormats>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <version>${quarkus.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>native-image</goal>
                                </goals>
                                <configuration>
                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <!--suppress MavenModelInspection -->
                        <version>${maven-surefire-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <native.image.path>
                                            ${project.build.directory}/${project.build.finalName}-runner
                                        </native.image.path>
                                    </systemProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>documentation</id>
            <activation>
                <property>
                    <name>doc</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Arc42 mit ASCII-Doctor -->
                    <!-- http://asciidoctor.org/docs/asciidoctor-maven-plugin/ -->
                    <plugin>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>${asciidoctor.maven.plugin.version}</version>
                        <dependencies>
                            <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                            <dependency>
                                <groupId>org.jruby</groupId>
                                <artifactId>jruby-complete</artifactId>
                                <version>${jruby.version}</version>
                            </dependency>
                            <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj</artifactId>
                                <version>${asciidoctorj.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj-diagram</artifactId>
                                <version>${asciidoctorj.diagram.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <sourceDirectory>src/docs/asciidoc</sourceDirectory>
                            <requires>
                                <require>asciidoctor-diagram</require>
                            </requires>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-html-doc</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <backend>html5</backend>
                                    <attributes>
                                        <imagesdir>./images</imagesdir>
                                        <toc>left</toc>
                                        <icons>font</icons>
                                        <sectanchors>true</sectanchors>
                                        <idprefix/>
                                        <idseparator>-</idseparator>
                                    </attributes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Publish ASCII-Doc to confluence -->
                    <!-- see https://github.com/alainsahli/confluence-publisher -->
                    <!-- mvn org.sahli.asciidoc.confluence.publisher:asciidoc-confluence-publisher-maven-plugin:publish -->
                    <plugin>
                        <groupId>org.sahli.asciidoc.confluence.publisher</groupId>
                        <artifactId>asciidoc-confluence-publisher-maven-plugin</artifactId>
                        <version>0.2.0</version>
                        <configuration>
                            <asciidocRootFolder>src/docs/asciidoc</asciidocRootFolder>
                            <rootConfluenceUrl>http://wiki.system.local</rootConfluenceUrl>
                            <!-- http://wiki.system.local/display/~U094915/Architekturdokumentation -->
                            <spaceKey>~U094915</spaceKey>
                            <ancestorId>127498278</ancestorId>
                            <!-- defined in settings.xml -->
                            <username>${wiki.user}</username> <!-- or read from property -->
                            <password>${wiki.password}</password>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>analyse</id>
            <activation>
                <property>
                    <name>analyse</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Komponenten-Check -->
                    <!-- manuelles starten des Servers -->
                    <!-- mvn jqassistant:server -->
                    <!-- https://jqassistant.org -->
                    <plugin>
                        <groupId>com.buschmais.jqassistant</groupId>
                        <artifactId>jqassistant-maven-plugin</artifactId>
                        <version>${jqassistant-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <goals>
                                    <goal>scan</goal>
                                    <goal>analyze</goal>
                                </goals>
                                <configuration>
                                    <failOnSeverity>CRITICAL</failOnSeverity>
                                    <warnOnSeverity>MINOR</warnOnSeverity>
                                    <!--
                                    <groups>
                                        <group>default</group>
                                    </groups>
                                    -->
                                    <scanIncludes>
                                        <scanInclude>
                                            <path>${project.basedir}/.git</path>
                                        </scanInclude>
                                    </scanIncludes>
                                    <reportProperties>
                                        <!--<graphml.report.directory>${session.topLevelProject.build.directory}/html/graphml</graphml.report.directory>-->
                                        <!--<asciidoc.report.directory>${session.topLevelProject.build.directory}/html</asciidoc.report.directory>-->
                                        <!--<asciidoc.report.rule.directory>${session.topLevelProject.basedir}/jqassistant-->
                                        <!--</asciidoc.report.rule.directory>-->
                                        <asciidoc.report.file.include>index.adoc</asciidoc.report.file.include>
                                    </reportProperties>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>de.kontext-e.jqassistant.plugin</groupId>
                                <artifactId>jqassistant.plugin.git</artifactId>
                                <version>1.3.0</version>
                            </dependency>
                            <dependency>
                                <groupId>org.jqassistant.contrib.plugin</groupId>
                                <artifactId>jqassistant-asciidoc-report-plugin</artifactId>
                                <version>1.0.0-RC2</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <!-- jQAssist -->
                    <plugin>
                        <groupId>com.buschmais.jqassistant</groupId>
                        <artifactId>jqassistant-maven-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>javadoc</id>
            <activation>
                <property>
                    <name>doc</name>
                </property>
            </activation>
            <reporting>
                <plugins>
                    <!-- Javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <!--suppress MavenModelInspection -->
                        <version>${maven-javadoc-plugin.version}</version>
                    </plugin>

                    <!-- Cross-Reference -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <!--suppress MavenModelInspection -->
                        <artifactId>maven-jxr-plugin</artifactId>
                        <!--suppress MavenModelInspection -->
                        <version>${maven-jxr-plugin.version}</version>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
    </profiles>
</project>