<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>signaliduna</groupId>
  <artifactId>parkinglot</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <properties>

    <!-- API -->
    <cdi-api.version>2.0</cdi-api.version>
    <javax.ws.rs-api.version>2.0</javax.ws.rs-api.version>

    <maven-dependency-plugin.version>3.0.2</maven-dependency-plugin.version>
    <wildfly.version>11.0.0.Final</wildfly.version>

    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven-surefire-plugin.version>2.19</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
    <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
    <jqassistant-maven-plugin.version>1.3.0</jqassistant-maven-plugin.version>
    <asciidoctor.maven.plugin.version>1.5.5</asciidoctor.maven.plugin.version>
    <asciidoctorj.version>1.5.6</asciidoctorj.version>
    <asciidoctorj.diagram.version>1.5.4.1</asciidoctorj.diagram.version>
    <jruby.version>1.7.26</jruby.version>

    <gmavenplus-plugin.version>1.6</gmavenplus-plugin.version>
    <groovy.version>2.4.3</groovy.version>

    <failOnMissingWebXml>false</failOnMissingWebXml>

    <version.wildfly.swarm>2017.10.0</version.wildfly.swarm>
    <javaee-api.version>8.0</javaee-api.version>
    <hibernate-validator.version>6.0.2.Final</hibernate-validator.version>
    <javax.el.version>3.0.1-b08</javax.el.version>
    <persistence-api.version>1.0.2</persistence-api.version>

    <javers-core.version>3.6.0</javers-core.version>

    <log4j2.version>2.9.0</log4j2.version>

    <!-- Web -->
    <servlet.version>3.1.0</servlet.version>
    <jsf.version>2.2.14</jsf.version>
    <primefaces.version>6.0</primefaces.version>

    <!-- Test -->
    <junit.version>4.12</junit.version>
    <hamcrest-all.version>1.3</hamcrest-all.version>
    <version.resteasy>3.1.4.Final</version.resteasy>
    <clover-maven-plugin>4.2.0</clover-maven-plugin>
    <deltaspike.version>1.7.2</deltaspike.version>
    <weld.version>3.0.1.Final</weld.version>
    <!-- Version 2.1.0 doesn't work with IntelliJ -->
    <cucumber.version>2.1.0</cucumber.version>
    <cucumber.version>1.2.5</cucumber.version>

    <!-- Reporting -->
    <maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
    <maven-surefire-report-plugin.version>2.20.1</maven-surefire-report-plugin.version>
    <maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>

    <pitest-maven.version>1.2.4</pitest-maven.version>

  </properties>

  <dependencies>

    <!-- API -->
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>${javax.ws.rs-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <version>${cdi-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- WEB -->
    <!-- Servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${servlet.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- JSF -->
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.faces</artifactId>
      <version>${jsf.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- PrimeFaces -->
    <dependency>
      <groupId>org.primefaces</groupId>
      <artifactId>primefaces</artifactId>
      <version>${primefaces.version}</version>
    </dependency>

    <!-- Validation -->
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate-validator.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.el</artifactId>
      <version>${javax.el.version}</version>
    </dependency>

    <!-- Domain auditing -->
    <!-- https://javers.org/documentation/ -->
    <dependency>
      <groupId>org.javers</groupId>
      <artifactId>javers-core</artifactId>
      <version>${javers-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.5</version>
    </dependency>
    <!-- Vergleich baut auf IDs auf, die mittels Persistence API beschrieben werden. -->
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>${persistence-api.version}</version>
    </dependency>

    <!-- Logging -->
    <!-- http://logging.apache.org/log4j/2.x/maven-artifacts.html -->
    <!-- Logging Apache Log4J2 -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
      <version>${log4j2.version}</version>
    </dependency>


    <!-- Test -->
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-test-control-module-api</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-test-control-module-impl</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.cdictrl</groupId>
      <artifactId>deltaspike-cdictrl-weld</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld.se</groupId>
      <artifactId>weld-se-core</artifactId>
      <version>${weld.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>${hamcrest-all.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- cucumber -->
    <!-- see http://www.hascode.com/2014/12/bdd-testing-with-cucumber-java-and-junit/ -->
    <dependency>
      <!--<groupId>io.cucumber</groupId>-->
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-weld</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- REST-Client -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <version>${version.resteasy}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <version>${version.resteasy}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>


  <build>
    <plugins>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
        <executions>
          <execution>
            <id>unpack-wildfly</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.wildfly</groupId>
                  <artifactId>wildfly-dist</artifactId>
                  <version>${wildfly.version}</version>
                  <type>zip</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.wildfly.swarm</groupId>
        <artifactId>wildfly-swarm-plugin</artifactId>
        <version>${version.wildfly.swarm}</version>
        <executions>
          <execution>
            <goals>
              <goal>package</goal>
            </goals>
          </execution>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <stdoutFile>target/stdout.log</stdoutFile>
              <stderrFile>target/stderr.log</stderrFile>
            </configuration>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>jaxrs</artifactId>
            <version>${version.wildfly.swarm}</version>
          </dependency>
          <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>cdi</artifactId>
            <version>${version.wildfly.swarm}</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- http://maven.apache.org/surefire/maven-failsafe-plugin/index.html -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>**/*Test.class</include>
            <include>**/*Suite.class</include>
          </includes>
        </configuration>
      </plugin>

      <!-- Komponenten-Check -->
      <!-- manuelles starten des Servers -->
      <!-- mvn jqassistant:server -->
      <!-- https://jqassistant.org -->

      <plugin>
        <groupId>com.buschmais.jqassistant</groupId>
        <artifactId>jqassistant-maven-plugin</artifactId>
        <version>${jqassistant-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>scan</goal>
              <goal>analyze</goal>
            </goals>
            <configuration>
              <failOnSeverity>CRITICAL</failOnSeverity>
              <warnOnSeverity>MINOR</warnOnSeverity>
              <!--
              <groups>
                  <group>default</group>
              </groups>
              -->
              <scanIncludes>
                <scanInclude>
                  <path>${project.basedir}/.git</path>
                </scanInclude>
              </scanIncludes>
              <reportProperties>
                <!--<graphml.report.directory>${session.topLevelProject.build.directory}/html/graphml</graphml.report.directory>-->
                <!--<asciidoc.report.directory>${session.topLevelProject.build.directory}/html</asciidoc.report.directory>-->
                <!--<asciidoc.report.rule.directory>${session.topLevelProject.basedir}/jqassistant-->
                <!--</asciidoc.report.rule.directory>-->
                <asciidoc.report.file.include>index.adoc</asciidoc.report.file.include>
              </reportProperties>
            </configuration>
          </execution>
        </executions>
        <!--
        <configuration>
            <store>
                <uri>bolt://localhost:7687</uri>
                <username>neo4j</username>
                <password>admin</password>
            </store>
        </configuration>
        -->
        <dependencies>
          <dependency>
            <groupId>de.kontext-e.jqassistant.plugin</groupId>
            <artifactId>jqassistant.plugin.git</artifactId>
            <version>1.3.0</version>
          </dependency>
          <dependency>
            <groupId>org.jqassistant.contrib.plugin</groupId>
            <artifactId>jqassistant-asciidoc-report-plugin</artifactId>
            <version>1.0.0-RC2</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Testet die Qualität der Tests -->
      <!-- http://pitest.org -->
      <!-- mvn org.pitest:pitest-maven:mutationCoverage -->
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest-maven.version}</version>
        <configuration>
          <excludedClasses>
            <param>de.signaliduna.*IT</param>
          </excludedClasses>
          <excludedMethods>
            <param>get*</param>
            <param>set*</param>
          </excludedMethods>
        </configuration>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>mutationCoverage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- http://blog.valiantys.com/en/dev-tools-en/implementing-test-coverage-with-atlassian-tools -->
      <!-- mvn clean clover:setup test clover:aggregate clover:clover -->
      <plugin>
        <groupId>org.openclover</groupId>
        <artifactId>clover-maven-plugin</artifactId>
        <version>${clover-maven-plugin}</version>
        <configuration>
          <targetPercentage>90%</targetPercentage>
          <!-- https://confluence.atlassian.com/clover/using-coverage-contexts-72548355.html -->
          <contextFilters>property</contextFilters>
        </configuration>
        <executions>
          <execution>
            <id>clover-check</id>
            <phase>verify</phase>
            <goals>
              <!-- create db for check -->
              <goal>instrument</goal>
              <goal>check</goal>
            </goals>
          </execution>
          <execution>
            <id>clover-report</id>
            <phase>pre-site</phase>
            <goals>
              <!-- create db for check -->
              <goal>instrument</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <!-- Arc42 mit ASCII-Doctor -->
      <!-- http://asciidoctor.org/docs/asciidoctor-maven-plugin/ -->
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor.maven.plugin.version}</version>
        <dependencies>
          <!-- Comment this section to use the default jruby artifact provided by the plugin -->
          <dependency>
            <groupId>org.jruby</groupId>
            <artifactId>jruby-complete</artifactId>
            <version>${jruby.version}</version>
          </dependency>
          <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
          <dependency>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctorj</artifactId>
            <version>${asciidoctorj.version}</version>
          </dependency>
          <dependency>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctorj-diagram</artifactId>
            <version>${asciidoctorj.diagram.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <sourceDirectory>src/docs/asciidoc</sourceDirectory>
          <requires>
            <require>asciidoctor-diagram</require>
          </requires>
        </configuration>
        <executions>
          <execution>
            <id>generate-html-doc</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html5</backend>
              <attributes>
                <imagesdir>./images</imagesdir>
                <toc>left</toc>
                <icons>font</icons>
                <sectanchors>true</sectanchors>
                <idprefix/>
                <idseparator>-</idseparator>
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Publish ASCII-Doc to confluence -->
      <!-- see https://github.com/alainsahli/confluence-publisher -->
      <!-- mvn org.sahli.asciidoc.confluence.publisher:asciidoc-confluence-publisher-maven-plugin:publish -->
      <plugin>
        <groupId>org.sahli.asciidoc.confluence.publisher</groupId>
        <artifactId>asciidoc-confluence-publisher-maven-plugin</artifactId>
        <version>0.2.0</version>
        <configuration>
          <asciidocRootFolder>src/docs/asciidoc</asciidocRootFolder>
          <rootConfluenceUrl>http://wiki.system.local</rootConfluenceUrl>
          <!-- http://wiki.system.local/display/~U094915/Architekturdokumentation -->
          <spaceKey>~U094915</spaceKey>
          <ancestorId>127498278</ancestorId>
          <!-- defined in settings.xml -->
          <username>${wiki.user}</username> <!-- or read from property -->
          <password>${wiki.password}</password>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <!-- jQAssist -->
    <plugins>
      <plugin>
        <groupId>com.buschmais.jqassistant</groupId>
        <artifactId>jqassistant-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!-- Code Coverage -->
      <plugin>
        <groupId>org.openclover</groupId>
        <artifactId>clover-maven-plugin</artifactId>
        <version>${clover-maven-plugin}</version>
      </plugin>

      <!-- Test result -->
      <!-- http://maven.apache.org/surefire/maven-surefire-report-plugin/usage.html -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven-surefire-report-plugin.version}</version>
      </plugin>

      <!-- Javadoc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
      </plugin>

      <!-- Cross-Reference -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
      </plugin>

      <!-- see http://pitest.org/quickstart/maven/ -->
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest-maven.version}</version>
        <configuration>
          <targetClasses>
            <param>de.signaliduna*</param>
          </targetClasses>
          <targetTests>
            <param>de.signaliduna*</param>
          </targetTests>
          <skip>false</skip>
          <sourceDataFormats>
            <sourceDataFormat>HTML</sourceDataFormat>
          </sourceDataFormats>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

    </plugins>
  </reporting>

</project>